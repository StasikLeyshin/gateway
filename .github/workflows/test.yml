name: k3s Testing
on:
  push:
    branches:
      - 'master1'
      - 'main1'

jobs:

  build-deploy-aks:
    runs-on: ubuntu-latest
    env:
      #DOCKER_REPOSITORY: houssemdocker # name of Docker Hub ID
      IMAGE_NAME: gateway
      IMAGE_TAG: ${{ github.run_number }} # $GITHUB_RUN_NUMBER

      DOCKER_HOST_REPOSITORY: reg.local

      CLUSTER_NAME: aks-cluster
      RESOURSE_GROUP: rg-aks-cluster

    steps:

      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Build Docker Image
        run:
          docker build ./ --file ./Dockerfile --tag $DOCKER_HOST_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER --build-arg=token=ZGEzNTQ5Y2QyNjAx --no-cache

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          image-ref: '${{ env.DOCKER_HOST_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'MEDIUM,HIGH,CRITICAL'

#      - name: Login to Docker Hub
#        run: |
#          echo "${{ secrets.DOCKER_REPOSITORY_PASSWORD }}" | docker login -u $DOCKER_REPOSITORY --password-stdin

      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "${{ secrets.DOCKER_IP_REPOSITORY }} ${{ env.DOCKER_HOST_REPOSITORY }}" | sudo tee -a /etc/hosts

      - name: Add host to /etc/docker/daemon.json
        run: |
          sudo sed -i 's/}/,"insecure-registries": ["${{ env.DOCKER_HOST_REPOSITORY }}"]}/' /etc/docker/daemon.json
          sudo systemctl restart docker.service

      - name: Push Image to Local Registry
        run:
          docker push $DOCKER_HOST_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER

      - name: Replacing tags on yaml
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["deploy/argo-cd/*.yaml"]'
          tokenPrefix: __ # optional, default is #{
          tokenSuffix: __ # optional, default is }#
        env:
          DOCKER_REPOSITORY: ${{ env.DOCKER_HOST_REPOSITORY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Run in k3s
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.22.0
      - run: kubectl apply -f deploy/argo-cd/development.yaml --insecure-skip-tls-verify=true